services:

  # API (TODO)

  # Database (PostgreSQL)
  glosis-db:
    container_name: glosis-db
    image: postgis/postgis:17-3.5
    restart: always
    environment:
      POSTGRES_DB: glosis
      POSTGRES_USER: glosis
      POSTGRES_PASSWORD: glosis
    ports:
      - "5442:5432"
    volumes:
      - ./glosis-db/pgdata:/var/lib/postgresql/data
    networks:
      - glosis-net

  # # Data collection (KoboToolbox)
  # glosis-dc-mongo:
  #   container_name: glosis-dc-mongo
  #   image: mongo:4.4
  #   restart: always
  #   networks:
  #     - glosis-net

  # glosis-dc:
  #   container_name: glosis-dc
  #   image: kobotoolbox/kobocat:2.025.02
  #   restart: always
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=kobocat.settings
  #     - KOBOFORM_URL=http://localhost:8003
  #     - ENKETO_URL=http://localhost:8005
  #     - DATABASE_URL=postgres://glosis:glosis@glosis-db:5432/glosis
  #     - MONGO_URL=mongodb://glosis-dc-mongo:27017/glosis
  #     - POSTGRES_HOST=glosis-db
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_DB=glosis
  #     - KOBO_SUPERUSER_USERNAME=kobo
  #     - KOBO_SUPERUSER_PASSWORD=kobo
  #     - KOBO_DEBUG=true
  #     - SKIP_MONGO_INIT=true
  #   ports:
  #     - "8003:8000"
  #   volumes:
  #     - ./kobo:/srv/src/kobocat
  #   depends_on:
  #     - glosis-db
  #     - glosis-dc-mongo
  #   networks:
  #     - glosis-net

  # Metadata (pyCSW)
  glosis-md:
    container_name: glosis-md
    image: geopython/pycsw:latest
    environment:
        PYCSW_SERVER_URL: http://localhost:8001
    ports:
      - 8001:8000
    volumes:
      - ./glosis-md/pycsw.yml:/etc/pycsw/pycsw.yml
      - ./glosis-md/records:/records
    networks:
      - glosis-net

  # Data ingestion tool (Shiny)
  glosis-shiny:
    container_name: glosis-shiny
    image: luislado/glosis-shiny:latest
    restart: always
    environment:
      USER: shiny
      PASSWORD: shiny
      DB_HOST: glosis-db
      DB_PORT: 5432
      DB_NAME: glosis
      DB_USER: glosis
      DB_PASSWORD: glosis
    ports:
      - "3838:3838"
    volumes:
      - ./glosis-shiny/init-scripts:/srv/shiny-server/init-scripts
    depends_on:
      - glosis-db
    networks:
      - glosis-net

  # Web Mapping (Openlayers)
  glosis-wm:
    container_name: glosis-wm
    build: 
      context: ./glosis-wm
      dockerfile: Dockerfile
    ports:
      - "1234:1234"
    volumes:
      - ./glosis-wm/public/layer_info.csv:/usr/share/nginx/html/public/layer_info.csv:ro
    environment:
      - NODE_ENV=production
    networks:
      - glosis-net
    depends_on:
      - glosis-ws

  # Web Services (MapServer)
  glosis-ws:
    container_name: glosis-ws
    image: camptocamp/mapserver:8.4
    restart: always
    ports:
      - "8082:80"
    volumes:
      - ./glosis-ws/data:/etc/mapserver:ro
    depends_on:
      - glosis-db
    networks:
      - glosis-net

networks:
  glosis-net:
    driver: bridge
    name: glosis-net
