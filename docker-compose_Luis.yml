services:

  # Database (PostgreSQL)
  glosis-db:
    container_name: glosis-db
    image: postgis/postgis:17-3.5
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5442:5432"
    volumes:
      - ./glosis-db/volume:/var/lib/postgresql/data
    networks:
      - glosis-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Metadata (pyCSW)
  glosis-md:
    container_name: glosis-md
    image: geopython/pycsw:3.0.0-beta1
    environment:
      PYCSW_SERVER_URL: http://localhost:8001
    ports:
      - "8001:8000"
    volumes:
      - ./glosis-md/pycsw.yml:/etc/pycsw/pycsw.yml
      - ./glosis-md/volume:/records
    networks:
      - glosis-net
    depends_on:
      glosis-db:
        condition: service_healthy

  # Data ingestion tool (Shiny)
  glosis-shiny:
    container_name: glosis-shiny
    image: luislado/glosis-shiny:v5
    restart: always
    environment:
      USER: shiny
      PASSWORD: shiny
      DB_HOST: glosis-db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "3838:3838"
    volumes:
      - ./glosis-shiny/volume:/srv/shiny-server/init-scripts
    depends_on:
      - glosis-db
    networks:
      - glosis-net

  # Web Mapping (OpenLayers)
  glosis-wm:
    container_name: glosis-wm
    build: 
      context: ./glosis-wm
      dockerfile: Dockerfile
    ports:
      - "1234:1234"
    volumes:
      - ./glosis-wm/public/layer_info.csv:/usr/share/nginx/html/public/layer_info.csv:ro
    environment:
      - NODE_ENV=production
    depends_on:
      - glosis-ws
    networks:
      - glosis-net

  # Web Services (MapServer)
  glosis-ws:
    container_name: glosis-ws
    image: camptocamp/mapserver:8.4
    restart: always
    ports:
      - "8082:80"
    volumes:
      - ./glosis-ws/volume:/etc/mapserver:ro
    depends_on:
      - glosis-db
    networks:
      - glosis-net

networks:
  glosis-net:
    driver: bridge
    name: glosis-net
